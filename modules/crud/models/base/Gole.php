<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\modules\crud\models\base;

use Yii;

/**
 * This is the base-model class for table "goles".
 *
 * @property integer $id_gol
 * @property integer $partido_id
 * @property integer $jugador_id
 * @property integer $equipo_id
 * @property integer $cant_goles
 *
 * @property \app\modules\crud\models\Jugador $jugador
 * @property string $aliasModel
 */
abstract class Gole extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'goles';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['partido_id', 'jugador_id', 'equipo_id', 'cant_goles'], 'integer'],
            [['jugador_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\modules\crud\models\Jugador::className(), 'targetAttribute' => ['jugador_id' => 'id_jugador']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id_gol' => Yii::t('models', 'Id Gol'),
            'partido_id' => Yii::t('models', 'Partido ID'),
            'jugador_id' => Yii::t('models', 'Jugador ID'),
            'equipo_id' => Yii::t('models', 'Equipo ID'),
            'cant_goles' => Yii::t('models', 'Cant Goles'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getJugador()
    {
        return $this->hasOne(\app\modules\crud\models\Jugador::className(), ['id_jugador' => 'jugador_id']);
    }


    
    /**
     * @inheritdoc
     * @return \app\models\query\GoleQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \app\models\query\GoleQuery(get_called_class());
    }


}
